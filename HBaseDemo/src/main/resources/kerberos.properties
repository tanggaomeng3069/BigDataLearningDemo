# Kerberos认证
kerberos.user.name=zhengzhou
# 本地IDEA
java.security.krb5.conf=D:/code_java/BigDataLearningDemo/HBaseDemo/src/main/resources/krb5.conf
kerberos.key.path=D:/code_java/BigDataLearningDemo/HBaseDemo/src/main/resources/zhengzhou.keytab

# 集群模式
#java.security.krb5.conf=/etc/krb5.conf
#java.security.auth.login.config=/usr/hdp/3.0.1.0-187/kafka/conf/security_client_jaas.conf
#kerberos.key.path=/etc/security/keytabs/zhengzhou.keytab

# 配置 hbase
# 先执行写程序，再执行读程序，程序运行之前，需要先创建HBase数据表（手动创建）
# 创建namespace
# create_namespace 'Test'
# 创建hbase namespace，表
# create 'Test:spark_write', 'info'
# 查看表结构
# desc 'Test:spark_write'
# 查看表中数据
# scan 'Test:spark_write'
# 统计表中数据
# count 'Test:spark_write'
# 删除表
# disable 'Test:spark_write'
# drop 'Test:spark_write'
# HBase表名称(namespace:hbase_table)
hbase.table.name=Test:spark_write
# HBase表列族
hbase.table.column.family=info
# 配置HBase连接zk信息及端口，逗号分隔
hbase.zookeeper.list=manager.insight.com,master.insight.com,worker.insight.com
hbase.zookeeper.port=2181
# HBase开启kerberos之后，可以指定master地址，最好使用以下配置_HOST
hbase.master.kerberos.principal=hbase/_HOST@INSIGHT
# 此处必须写成_HOST，因为regionserver是存在多个节点
hbase.regionserver.kerberos.principal=hbase/_HOST@INSIGHT
hbase.client.retries.number=5
# Insight平台查看hbase的配置参数
zookeeper.znode.parent=/hbase-secure